const beautifyId = require('./beautifyId');

const translateApartments = (apartments) =>
    apartments
        ?.map(({ layout = String, area = Number }) => {
            if (layout.includes('Duplex')) {
                if (layout.includes('Garden')) {
                    return '–ì–∞—Ä–¥–µ–Ω-–¥—É–ø–ª–µ–∫—Å' + layout.replace('Garden Duplex', '') + `${area} –º¬≤`;
                }
                return '–î—É–ø–ª–µ–∫—Å' + layout.replace('Duplex', '') + `${area} –º¬≤`;
            }
            return `–ê–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã:\n${layout.trim()} ${area} –º¬≤`;
        })
        .join('\n');
module.exports = {
    lang: 'ru',
    WELCOME:
        '–ù–∞ –í–∞—à –≤—ã–±–æ—Ä —Ä–æ—Å–∫–æ—à–Ω—ã–µ –≤–∏–ª–ª—ã –∏ –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã –≤ –Ω–æ–≤–æ—Å—Ç—Ä–æ–π–∫–∞—Ö –Ω–∞–ø—Ä—è–º—É—é –æ—Ç –∑–∞—Å—Ç—Ä–æ–π—â–∏–∫–æ–≤, –∞ —Ç–∞–∫–∂–µ —à–∏—Ä–æ–∫–∏–π –≤—ã–±–æ—Ä –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤!\n' +
        '–î–ª—è –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–∏–ª—å—Ç—Ä—ã.\n',
    MENU_BUTTON: '–ú–µ–Ω—é',
    CONTROL_PANEL: {
        text: '–ü–æ–∏—Å–∫ –ø–æ —Ñ–∏–ª—å—Ç—Ä–∞–º',
    },
    START: {
        text: '/start',
        regex: /\/start/,
    },
    NO_FLATS: '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∏–∑–º–µ–Ω–∏—Ç–µ —Ñ–∏–ª—å—Ç—Ä—ã',
    SERVER_ERROR: '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –ø–æ–∑–∂–µ!',
    SAVED: '–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ',
    FAVORITE: {
        text: '–°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ‚ù§Ô∏è',
    },
    FAVORITE_HOUSINGS: {
        text: '–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å ‚ù§Ô∏è',
    },
    SEARCH: {
        text: '–ü–æ–∏—Å–∫ üîç',
    },
    COMPLETE_SEARCHING: {
        text: '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–∏—Å–∫ üîç',
    },
    SELECT_SUBGROUP: {
        text: '–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–≥—Ä—É–ø–ø—É',
    },
    REPEAT_SEARCH_FLATS: {
        text: '–ò—Å–∫–∞—Ç—å –ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å –∑–∞–Ω–æ–≤–æ',
    },
    NO_FAVORITE_NOW: '–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–π –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏!',
    UN_AUTHORIZE: '–ö–∞–∂–µ—Ç—Å—è –º—ã –Ω–µ —Å–º–æ–≥–ª–∏ –Ω–∞–π—Ç–∏ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞!',
    WRITE_AGENT_INLINE: {
        text: '–°–≤—è–∑–∞—Ç—å—Å—è',
    },
    WRITE_INLINE: {
        complex: {
            text: '–°–≤—è–∑–∞—Ç—å—Å—è —Å –∑–∞—Å—Ç—Ä–æ–π—â–∏–∫–æ–º',
        },
        owner: {
            text: '–°–≤—è–∑–∞—Ç—å—Å—è —Å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–º',
        },
    },
    WRITE_AGENT: {
        userText: {
            complex: ({ agentUsername, flatId, developerName, city, district }) =>
                `–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! \n` +
                '\n' +
                '–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –í–∞—Å –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞!\n' +
                '\n' +
                `ID: ${beautifyId(flatId)} \n` +
                `–ö–æ–º–ø–ª–µ–∫—Å:\n` +
                `–ó–∞—Å—Ç—Ä–æ–π—â–∏–∫: ${developerName} \n` +
                `–ì–æ—Ä–æ–¥: ${city} \n` +
                `–†–∞–π–æ–Ω: ${district} \n` +
                `–ú–µ–Ω–µ–¥–∂–µ—Ä –∫–æ–º–ø–∞–Ω–∏–∏ ¬´${developerName}¬ª https://t.me/${agentUsername} –æ—Ç–≤–µ—Ç–∏—Ç –Ω–∞ –ª—é–±–æ–π –≤–∞—à –≤–æ–ø—Ä–æ—Å!`,
            owner: ({ agentUsername, layout, area, city, district, neighborhood }) =>
                '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! \n' +
                '\n' +
                '–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –í–∞—Å –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞!\n' +
                '\n' +
                '\n' +
                `–ê–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã: ${layout}, ${area} –º¬≤\n` +
                '\n' +
                `–ì–æ—Ä–æ–¥: ${city} \n` +
                `–†–∞–π–æ–Ω: ${district} \n` +
                `–ú–∏–∫—Ä–æ—Ä–∞–π–æ–Ω: ${neighborhood}\n` +
                '\n' +
                '–ü—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫–∞ –æ—Ç–≤–µ—Ç–∏—Ç –Ω–∞ –ª—é–±–æ–π –≤–∞—à –≤–æ–ø—Ä–æ—Å, –¥–ª—è —Å–≤—è–∑–∏ —Å –Ω–∏–º –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ!\n' +
                `https://t.me/${agentUsername}`,
        },
        realtorText: ({ username, flatId, developerName, city, district }) =>
            '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! \n' +
            '\n' +
            `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å https://t.me/${username} –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç—Å—è –¥–∞–Ω–Ω—ã–º –æ–±—ä–µ–∫—Ç–æ–º \n` +
            '\n' +
            `ID: ${beautifyId(flatId)} \n` +
            '–ö–æ–º–ø–ª–µ–∫—Å: \n' +
            `–ó–∞—Å—Ç—Ä–æ–π—â–∏–∫: ${developerName} \n` +
            `–ì–æ—Ä–æ–¥: ${city} \n` +
            `–†–∞–π–æ–Ω: ${district} \n` +
            '\n' +
            '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ –µ–º—É –æ—Ç –ª–∏—Ü–∞ –∑–∞—Å—Ç—Ä–æ–π—â–∏–∫–∞ –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ!',
    },
    HOUSING_FULL_DESCRIPTION: {
        complex: ({
            name,
            developerName,
            cost,
            apartments,
            city,
            district,
            metersFromTheSea,
            locationUrl,
            caption,
            area,
            infrastructure,
            apartmentEquipment,
            constructionCompletionDate,
        }) => {
            apartments = translateApartments(apartments);
            infrastructure = infrastructure?.map((el) => el.title.trim()).join('\n');
            apartmentEquipment = apartmentEquipment?.map((el) => el.title.trim()).join(', ');
            return (
                `–ö–æ–º–ø–ª–µ–∫—Å: ${name} \n\n` +
                `–ó–∞—Å—Ç—Ä–æ–π—â–∏–∫: ${developerName} \n\n` +
                `–¶–µ–Ω–∞ –æ—Ç ‚Ç¨ ${cost} \n\n` +
                `–ì–æ—Ä–æ–¥: ${city} \n\n` +
                `–†–∞–π–æ–Ω: ${district} \n\n` +
                `–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è: ${locationUrl} \n\n` +
                `–î–æ –°—Ä–µ–¥–∏–∑–µ–º–Ω–æ–≥–æ –º–æ—Ä—è: ${metersFromTheSea}–º \n` +
                `${apartments ? `\n–ü–ª–∞–Ω–∏—Ä–æ–≤–∫–∏: \n${apartments} \n\n` : ''}` +
                `–û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–ø–ª–µ–∫—Å–∞: \n` +
                `${caption} –ü–ª–æ—â–∞–¥—å —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –∫–æ–º–ø–ª–µ–∫—Å–∞: ${area}. –§—É—Ä–Ω–∏—Ç—É—Ä–∞ –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤: ${apartmentEquipment} \n\n` +
                `–ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–æ–º–ø–ª–µ–∫—Å–∞: \n` +
                `${infrastructure} \n\n` +
                `–°–¥–∞—á–∞ –æ–±—ä–µ–∫—Ç–∞: ${constructionCompletionDate}`
            );
        },
        owner: ({
            cost,
            code,
            city,
            district,
            neighborhood,
            layout,
            area,
            floors,
            heatingType,
            furniture,
            yearOfConstruction,
            infrastructure,
            metersFromTheSea,
        }) => {
            infrastructure = infrastructure?.map((el) => el.title.trim()).join('\n');
            floors = floors?.map((el) => el.floor).join(' –∏ ');
            return (
                `–¶–µ–Ω–∞: ${cost}\n` +
                '\n' +
                `–ö–æ–¥: ${code}\n` +
                '\n' +
                `–ì–æ—Ä–æ–¥: ${city}\n` +
                `–†–∞–π–æ–Ω: ${district}\n` +
                `–ú–∏–∫—Ä–æ—Ä–∞–π–æ–Ω: ${neighborhood}\n` +
                '\n' +
                `–ê–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã: ${layout}, ${area} –º¬≤\n` +
                `–≠—Ç–∞–∂: ${floors}\n` +
                `–û—Ç–æ–ø–ª–µ–Ω–∏–µ: ${heatingType}\n` +
                `–ú–µ–±–µ–ª—å: ${furniture}\n` +
                `–ì–æ–¥ –ø–æ—Å—Ç—Ä–æ–π–∫–∏: ${yearOfConstruction}\n` +
                '\n' +
                `–ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–æ–º–ø–ª–µ–∫—Å–∞: ${infrastructure}\n` +
                '\n' +
                `–î–æ –°—Ä–µ–¥–∏–∑–µ–º–Ω–æ–≥–æ –º–æ—Ä—è: ${metersFromTheSea}–º\n`
            );
        },
    },
    SHORT_DESCRIPTION: {
        owner: ({ layout, area, floors, city, district, cost }) => {
            floors = floors?.map((el) => el.floor).join(floors.length > 1 ? ' –∏ ' : '');
            cost = cost.toString().replace(/(\d)(?=(\d{3})+$)/g, '$1 ');
            return (
                `–ê–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã${layout}, ${area} –º¬≤, ${floors} —ç—Ç–∞–∂.\n` +
                `${city}, —Ä–∞–π–æ–Ω ${district}.\n` +
                '\n' +
                `${cost} ‚Ç¨\n`
            );
        },
        complex: ({ apartments, city, district, cost }) => {
            apartments = translateApartments(apartments);
            cost = cost.toString().replace(/(\d)(?=(\d{3})+$)/g, '$1 ');
            return `${apartments}\n` + `${city}, —Ä–∞–π–æ–Ω ${district}.\n` + '\n' + `${cost} ‚Ç¨\n`;
        },
    },
    CHOOSE_THE_ACTION: {
        text: (flatId) => `ID: ${beautifyId(flatId)} \n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:`,
    },
    GO_BACK_ACTION: {
        text: '<<–ù–∞–∑–∞–¥',
    },
    DELETE_ACTION: {
        text: '–£–¥–∞–ª–∏—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ',
    },
    DELETED: {
        text: '–ö–≤–∞—Ä—Ç–∏—Ä–∞ —É–¥–∞–ª–µ–Ω–∞ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ.',
    },
    FULL_DESCRIPTION: {
        text: '–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ',
    },
    SAVE_INLINE: {
        text: '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å',
    },
    NEXT_INLINE: {
        text: '–°–ª–µ–¥—É—é—â–∞—è',
    },
};
