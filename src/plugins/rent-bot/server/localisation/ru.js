const { beautifyId } = require('../utils');
const { beautifyParams } = require('../utils');

const beautifyBigNum = (cost) => cost.toString().replace(/(\d)(?=(\d{3})+$)/g, '$1 ');
/**
 * @type {{WELCOME: {first: string, second: string}, INPUT_ERROR: {date: string}, DELETED: {text: string}, WRITE_AGENT_INLINE: {text: string}, HOUSING_FULL_DESCRIPTION: (function(*): string), SERVER_ERROR: string, UN_AUTHORIZE: string, SAVED: string, NO_USERNAME: string, FAVORITE: {text: string}, lang: string, FULL_DESCRIPTION: {text: string}, WRITE_AGENT: {userText: (function(*): string), realtorText: (function(*): string)}, NO_FAVORITE_NOW: string, SEARCH: {text: string}, CONTROL_PANEL: {text: string}, COMPLETE_SEARCHING: {text: string}, DATE: string, SAVE_INLINE: {text: string}, SHORT_DESCRIPTION: (function(*): string), NEXT_INLINE: {text: string}, REPEAT_SEARCH_FLATS: {text: string}, START: {regex: RegExp, text: string}, GO_BACK_ACTION: {text: string}, DELETE_ACTION: {text: string}, NO_FLATS: string}}
 */
module.exports = {
    lang: 'ru',
    WELCOME: {
        first:
            'üáπüá∑–¢—É—Ä—Ü–∏—è —Å–µ–≥–æ–¥–Ω—è ‚Äî –æ–¥–Ω–∞ –∏–∑ —Å–∞–º—ã—Ö —É–¥–æ–±–Ω—ã—Ö –∏ –±–µ–∑–æ–ø–∞—Å–Ω—ã—Ö —Å—Ç—Ä–∞–Ω –¥–ª—è –ø–µ—Ä–µ–µ–∑–¥–∞. \n' +
            '\n' +
            '–ó–¥–µ—Å—å –∏–Ω–æ—Å—Ç—Ä–∞–Ω—Ü—ã –º–æ–≥—É—Ç –±—ã—Å—Ç—Ä–æ –ø–æ–ª—É—á–∏—Ç—å –≤–∏–¥ –Ω–∞ –∂–∏—Ç–µ–ª—å—Å—Ç–≤–æ –∏ –¥–∞–∂–µ —Ç—É—Ä–µ—Ü–∫–∏–π –ø–∞—Å–ø–æ—Ä—Ç, –∞ —Å–∞–º–∞ –¢—É—Ä—Ü–∏—è ‚Äî –≥–æ—Å—Ç–µ–ø—Ä–∏–∏–º–Ω–∞—è –∏ —Ä–∞–¥—É—à–Ω–∞—è —Å—Ç—Ä–∞–Ω–∞ —Å —Ç–µ–ø–ª—ã–º –º–æ—Ä–µ–º. \n' +
            '\n' +
            '–û—Å—Ç–∞–ª–æ—Å—å –ø–æ–¥–æ–±—Ä–∞—Ç—å –∂–∏–ª—å–µ! üè°',
        second: '–ù–∞ –í–∞—à –≤—ã–±–æ—Ä —Ä–æ—Å–∫–æ—à–Ω—ã–µ –≤–∏–ª–ª—ã –∏ –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã –≤ –Ω–æ–≤–æ—Å—Ç—Ä–æ–π–∫–∞—Ö, –∞ —Ç–∞–∫–∂–µ —à–∏—Ä–æ–∫–∏–π –≤—ã–±–æ—Ä –æ–±—ä–µ–∫—Ç–æ–≤ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤!',
    },
    INPUT_ERROR: {
        date: '–ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω–Ω–∞ –¥–∞—Ç–∞',
        fullName: '–ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω–Ω–æ –§–ò–û',
        phoneNumber: '–ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞',
    },
    DATE: '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—ã\n' + '–ø—Ä–∏–º–µ—Ä:\n' + '–¥–¥.–º–º.–≥–≥–≥–≥ - –¥–¥.–º–º.–≥–≥–≥–≥\n' + '12.01.2022 - 17.01.2022',
    GET_USER_INFO: '–ü—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è —É–¥–æ–±–Ω–æ–π —Å–≤—è–∑–∏ —Å –≤–∞–º–∏',
    ENTER_FULL_NAME: '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –§–ò–û\n' + '–ø—Ä–∏–º–µ—Ä\n' + '–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á',
    ENTER_PHONE_NUMBER: '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞\n' + '–ø—Ä–∏–º–µ—Ä\n' + '+79998881234\n',
    CONTROL_PANEL: {
        text: '–ü–æ–∏—Å–∫ –ø–æ —Ñ–∏–ª—å—Ç—Ä–∞–º',
    },
    START: {
        text: '/start',
        regex: /\/start/,
    },
    NO_FLATS: '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∏–∑–º–µ–Ω–∏—Ç–µ —Ñ–∏–ª—å—Ç—Ä—ã',
    NO_USERNAME:
        '–î–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–∏—Å–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Å–µ–±–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö.\n' +
        '–ü–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç —Å—Ç–∞—Ä—Ç\n' +
        '\n' +
        'Username - –í–∞—à–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram.\n' +
        '–ü–æ—à–∞–≥–æ–≤–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n' +
        '\n' +
        ' 1. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–ù–∞—Å—Ç—Ä–æ–π–∫–∏¬ª –≤ –ø—Ä–∞–≤–æ–º –Ω–∏–∂–Ω–µ–º —É–≥–ª—É —ç–∫—Ä–∞–Ω–∞\n' +
        '\n' +
        ' 2. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–ò–∑–º.¬ª –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É —ç–∫—Ä–∞–Ω–∞\n' +
        '\n' +
        ' 3. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –≥—Ä–∞—Ñ—É ¬´–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è¬ª –≤ —Å–µ—Ä–µ–¥–∏–Ω–µ —ç–∫—Ä–∞–Ω–∞\n' +
        '\n' +
        ' 4. –ü—Ä–∏–¥—É–º–∞–π—Ç–µ –∏ –≤–ø–∏—à–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–≤–æ–±–æ–¥–Ω—É—é –≥—Ä–∞—Ñ—É, –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ ¬´–ì–æ—Ç–æ–≤–æ¬ª –≤ –≤–µ—Ä—Ö–Ω–µ–º –ø—Ä–∞–≤–æ–º —É–≥–ª—É\n' +
        '\n' +
        ' 5. –í–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ —Å–µ—Ä–≤–∏—Å –∏ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç —Å—Ç–∞—Ä—Ç\n' +
        '\n' +
        '–ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å —Å–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ! –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!',
    SERVER_ERROR: '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –ø–æ–∑–∂–µ!',
    SAVED: '–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ',
    FAVORITE: {
        text: '–°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ‚ù§Ô∏è',
    },
    SEARCH: {
        text: '–ü–æ–∏—Å–∫ üîç',
    },
    COMPLETE_SEARCHING: {
        text: '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–∏—Å–∫ üîç',
    },
    REPEAT_SEARCH_FLATS: {
        text: '–ò—Å–∫–∞—Ç—å –ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å –∑–∞–Ω–æ–≤–æ',
    },
    NO_FAVORITE_NOW: '–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–π –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏!',
    UN_AUTHORIZE: '–ö–∞–∂–µ—Ç—Å—è –º—ã –Ω–µ —Å–º–æ–≥–ª–∏ –Ω–∞–π—Ç–∏ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞!',
    WRITE_AGENT_INLINE: {
        text: '–°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–≥–µ–Ω—Ç–æ–º',
    },
    WRITE_AGENT: {
        userText: (params) => {
            const { title, agentUsername, flatId, city, district } = beautifyParams(params);
            return (
                '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! \n\n' +
                '–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –í–∞—Å –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞!\n\n' +
                '–ü—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫–∞ –æ—Ç–≤–µ—Ç–∏—Ç –Ω–∞ –ª—é–±–æ–π –≤–∞—à –≤–æ–ø—Ä–æ—Å, –¥–ª—è —Å–≤—è–∑–∏ —Å –Ω–∏–º –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ!\n\n' +
                `${city}, —Ä–∞–π–æ–Ω ${district}\n\n` +
                `ID: ${beautifyId(flatId)}\n\n` +
                `${title}\n\n` +
                `https://t.me/${agentUsername}`
            );
        },
        realtorText: (params) => {
            const { username, flatId, city, district, table } = beautifyParams(params);
            return (
                '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! \n' +
                '\n' +
                `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å https://t.me/${username} –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç—Å—è –¥–∞–Ω–Ω—ã–º –æ–±—ä–µ–∫—Ç–æ–º \n` +
                '\n' +
                `ID: ${beautifyId(flatId)} \n` +
                `–ì–æ—Ä–æ–¥: ${city} \n` +
                `–†–∞–π–æ–Ω: ${district} \n\n` +
                '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ –∫–ª–∏–µ–Ω—Ç—É –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ!\n\n' +
                '–°—Å—ã–ª–∫–∞ –Ω–∞ –æ–±—ä–µ–∫—Ç:\n' +
                `https://xatta.ru/admin/content-manager/collectionType/api::${table.toLowerCase()}.${table.toLowerCase()}/${flatId}`
            );
        },
    },
    HOUSING_FULL_DESCRIPTION: (params) => {
        let {
            cost,
            title,
            caption,
            city,
            district,
            neighborhood,
            layout,
            area,
            floors,
            furniture,
            yearOfConstruction,
            infrastructure,
            metersFromTheSea,
        } = beautifyParams(params);
        infrastructure = infrastructure?.map((el) => '‚Ä¢ ' + el.title.trim() + ';').join('\n');
        furniture = furniture?.map((el) => '- ' + el.title.trim() + ';').join('\n');
        floors = floors?.map((el) => el.floor).join(' –∏ ');

        return (
            `${title}\n\n` +
            `–¶–µ–Ω–∞: ${beautifyBigNum(cost)}\n\n` +
            `–ì–æ—Ä–æ–¥: ${city}\n\n` +
            `${district ? `–†–∞–π–æ–Ω: ${district}\n\n` : ''}` +
            `–ú–∏–∫—Ä–æ—Ä–∞–π–æ–Ω: ${neighborhood}\n\n` +
            `${metersFromTheSea ? `–î–æ –°—Ä–µ–¥–∏–∑–µ–º–Ω–æ–≥–æ –º–æ—Ä—è: ${beautifyBigNum(metersFromTheSea)}–º\n\n` : ''}` +
            `–≠—Ç–∞–∂: ${floors}\n\n` +
            `–ê–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã: ${layout}, ${area} –º¬≤\n\n` +
            `${caption}\n\n` +
            `${furniture ? `–í –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞—Ö:\n${furniture} \n\n` : ''}` +
            `${infrastructure ? `–ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞:\n${infrastructure}\n\n` : ''}` +
            `${yearOfConstruction ? `–ì–æ–¥ –ø–æ—Å—Ç—Ä–æ–π–∫–∏: ${yearOfConstruction}\n\n` : ''}`
        );
    },
    SHORT_DESCRIPTION: (params) => {
        let { layout, area, floors, city, district, cost } = beautifyParams(params);
        floors = floors?.map((el) => el.floor).join(floors.length > 1 ? ' –∏ ' : '');

        return (
            `–ê–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã${layout}, ${area} –º¬≤, ${floors} —ç—Ç–∞–∂.\n` +
            `${city}, —Ä–∞–π–æ–Ω ${district}.\n` +
            '\n' +
            `${beautifyBigNum(cost)} ‚Ç¨\n`
        );
    },
    GO_BACK_ACTION: {
        text: '<<–ù–∞–∑–∞–¥',
    },
    DELETE_ACTION: {
        text: '–£–¥–∞–ª–∏—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ',
    },
    DELETED: {
        text: '–ö–≤–∞—Ä—Ç–∏—Ä–∞ —É–¥–∞–ª–µ–Ω–∞ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ.',
    },
    FULL_DESCRIPTION: {
        text: '–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ',
    },
    SAVE_INLINE: {
        text: '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å',
    },
    NEXT_INLINE: {
        text: '–î–∞–ª–µ–µ',
    },
};
